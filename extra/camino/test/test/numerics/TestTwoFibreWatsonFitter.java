package numerics;

import junit.framework.*;
import junit.extensions.*;

import numerics.*;
import optimizers.*;

/**
 * <dl>
 * <dt>Purpose: Automated tests for TwoFibreWatsonFitter.
 * <BR><BR>
 *
 * 
 * </dl>
 *
 * @version $Id: TestTwoFibreWatsonFitter.java,v 1.1 2005/09/26 10:36:49 ucacpco Exp $
 * @author  Philip Cook
 * @see <A HREF="http://www.junit.org">Junit Homepage</A>
 *
 *
 */
public class TestTwoFibreWatsonFitter extends TestCase {


    protected static final double alpha = 0.5;


    /** 
     * Initialise global resources for tests.
     */
    protected void setUp() {

    }

    
    protected void tearDown() {

    }


    public TestTwoFibreWatsonFitter(String name) {
	super(name);
    }
    
    public static void main(String[] args) {
	junit.textui.TestRunner.run(suite());
    }

    

    public static Test suite() {
	return new TestSuite(TestTwoFibreWatsonFitter.class);
    }



    private static final double[][] testData = 
	new double[][] {
	    {0.97506344132965,0.22113266705797524,-0.018751771708502785},
	    {0.965888677102392,0.2408513118550355,0.09512995859927564},
	    {-0.9401698031875159,-0.30246303541328384,-0.15683384004394718},
	    {-0.9919610730015428,-0.1263877417366466,0.006274423347115643},
	    {0.9064877644352058,0.4137799905918935,0.08405981391268756},
	    {-0.9489300766770941,-0.2908348873312517,-0.12225701570307798},
	    {-0.9785097581995931,-0.20269211491159472,0.03787558132675306},
	    {-0.9971283982897263,-0.071338461652378,0.02541222566476989},
	    {-0.9747176500011822,-0.20028175178515362,-0.09905918775178416},
	    {-0.9825782030200658,-0.13136487632996563,-0.13146613334494656},
	    {0.9206596887760834,0.3140334357540925,-0.23188087176652927},
	    {-0.9927685684049924,-0.11675779165811301,-0.02789601538254735},
	    {0.9785567997160823,0.1851184941922169,-0.09032016849754898},
	    {0.9781860696300576,0.17791376466752382,0.10723201725011608},
	    {0.9792871697070237,0.1599061795811731,-0.12420407794819238},
	    {0.9743819599885664,0.17541547824645665,0.14074518123334395},
	    {0.9203540579658163,0.3806668382727974,0.08967255000972789},
	    {0.971483086268677,0.221577990455713,-0.08440264948148554},
	    {0.9857833973775344,0.0963274147025063,0.13766670850840285},
	    {0.9601715825490431,0.27503723153856996,-0.049244830519207444},
	    {0.9651948933199206,0.08933645953999816,0.24580035578901321},
	    {0.9479521254080346,0.315378940537028,-0.04385079018822613},
	    {0.9740261214210847,0.22455776295549792,0.02910199109719258},
	    {-0.8865767203921567,-0.43815950316533536,-0.1483171218861598},
	    {0.9908083178209631,0.1279840856453984,0.0438058347518388},
	    {-0.9371462898288633,-0.11393478683518903,-0.32981160654048597},
	    {-0.9610529894075112,-0.24920625062137003,0.11947131957974444},
	    {-0.9391057691683622,-0.34193160191967253,-0.034104749278442675},
	    {0.9462517618091448,0.043105960425589424,0.32054559652080206},
	    {-0.9726613535432043,-0.2257255872737417,-0.0545696854803744},
	    {-0.9797791892172776,-0.1552386089296835,-0.12622881871550135},
	    {-0.9699015192842573,-0.18460275309043214,-0.15878559897396918},
	    {0.9200558678809156,0.2971130169106162,0.255384132553624},
	    {-0.9596969100014782,-0.2598930804708749,-0.10694590995907538},
	    {-0.9345007172257768,-0.20199160765099805,-0.293100324024171},
	    {-0.9363810359753426,-0.3463790888060072,-0.0566752353648767},
	    {0.983385371320943,0.18078374891904786,0.016445291081215674},
	    {0.9913529725233436,0.12292633987064375,0.04591730431044382},
	    {-0.9398597450120413,-0.2643366005189032,-0.21630954979383263},
	    {0.9524648074840917,0.24699988663212805,0.1783307222774812},
	    {-0.9890886896469537,-0.14406557945400777,0.03080053293457871},
	    {-0.9482447572624655,-0.1398768168590983,-0.2850725459065007},
	    {0.9759651134930701,0.21261094208010597,0.04784019807932487},
	    {-0.9803706873783391,-0.1909433091058118,-0.04913214871187041},
	    {0.9436387504466768,0.16524560998955976,0.2867748193872899},
	    {0.9759471807857747,0.2046884684627128,0.07503153466835016},
	    {-0.9820690776461535,-0.186926539516083,-0.024470299462330883},
	    {0.9733355650415417,0.18282150656514817,0.1385430422739164},
	    {-0.9772566895313743,-0.12287422264452146,0.1728331223338982},
	    {-0.9821260907962405,-0.1663002991625691,-0.08816207957923498},
	    {0.9405470697458529,0.17532510217433772,0.29091634216737944},
	    {-0.9968264657098791,-0.07843486016061851,-0.013600366610330206},
	    {0.9542538754965119,0.20635129816392864,0.21637625296217022},
	    {0.9634135235903323,0.2676505961721138,0.014054925541346436},
	    {0.9840146398781029,0.12847396513952575,0.12332732376442708},
	    {-0.9820809816131166,-0.12420394351850708,-0.14174034700207547},
	    {-0.9244499312131781,-0.2286805753287372,-0.3051188606875492},
	    {-0.9610447799629128,-0.2576513393994925,-0.10004358156165907},
	    {-0.9371812786598231,-0.3269189846626311,0.12171782283911375},
	    {-0.9711794839474425,-0.23587256585978927,-0.03427160098827289},
	    {-0.9403702050446943,-0.3391677853400543,0.02586679051840543},
	    {0.9672986986562082,0.2433573393714879,0.07148729224160616},
	    {0.9460545097373119,0.30730148278799174,0.10269694874725455},
	    {-0.9628531397927487,-0.19141122804193747,-0.1904614737177124},
	    {0.9574318093247222,0.2875174506316068,-0.025652408765856866},
	    {-0.9423286862859888,-0.30567932005999343,-0.13629673616848936},
	    {0.9903669670727547,-0.022597665010091528,0.13661118573237363},
	    {-0.9840467044043112,-0.16239077280330078,-0.07267269404226932},
	    {-0.9989236678085656,-0.02863368175718306,-0.03649134364353974},
	    {-0.9795620425475433,-0.2008826331285137,0.010216286382053519},
	    {-0.9601058525020193,-0.2739657494082187,-0.05603142102931552},
	    {0.9618126979456696,0.19792768876017602,0.18905280768221128},
	    {0.9770019727151766,0.18171345174293047,0.11156776759585485},
	    {-0.960865219453746,-0.22009755167310924,0.16821146747950186},
	    {0.9716376155766282,0.20761299939057715,0.11321301374229469},
	    {-0.9873521222828154,0.10757868373720997,-0.11645863398215647},
	    {-0.9663481501621795,-0.23757439567534405,-0.09863903485755068},
	    {-0.9368200303989207,-0.34500190161422173,0.057809329056274866},
	    {0.9870773252742099,0.08176901538175718,-0.13781212592878148},
	    {0.9474592988597109,0.3106740753615477,-0.07617411569892174},
	    {0.9476647229485154,0.31845682719386814,-0.022733721484374664},
	    {0.991093319415248,0.13306911408310154,-0.005161694257103},
	    {-0.9763192374618153,-0.21603004400285797,0.011478965550233061},
	    {-0.9710542163435176,-0.12211572098037349,-0.20528385131549048},
	    {-0.9272889579979599,-0.36258745352303023,-0.09308881201703348},
	    {0.9948135499948995,0.09879492616601257,-0.024198415452211658},
	    {-0.9501309782452004,-0.3106313181656316,-0.02755555032113302},
	    {-0.9362034489512928,-0.26429412336281877,-0.23167157470778083},
	    {0.943295338154375,0.2734999222620131,0.18812681238700665},
	    {0.9627731823907325,0.26581904964563313,0.0490717038089559},
	    {0.926984612254009,0.37502160451520816,-0.007637066918896776},
	    {0.956479053294768,0.21800123532306254,0.19396721889526367},
	    {-0.9768364864849087,-0.1178027699014319,-0.17864206132758648},
	    {-0.9620608984301893,-0.165100991596551,-0.21721070481339688},
	    {0.9883597755450411,0.12956216163479484,-0.07974083243280003},
	    {-0.9879614525289461,-0.15172700522364108,0.030184171394298825},
	    {-0.9275580496363733,-0.2941219428187862,-0.2304958726469308},
	    {-0.9587623461427244,-0.265487095467789,-0.10144636888019115},
	    {-0.990652801382021,-0.10582154611361042,-0.086074546133449},
	    {0.9876488385863216,0.15376921912267555,-0.030079875157540403},
	    {-0.24032292039070266,0.9221360407644842,0.3031666476677235},
	    {-0.22800490585144265,0.9419603098372406,0.24642349238456274},
	    {-0.2372566264284671,0.9127985295129266,0.33242764285603776},
	    {-0.3201691681702778,0.8793259800356353,0.3525301754283198},
	    {0.28621468458808663,-0.8573580646850929,-0.42780638523235565},
	    {0.26307908199884567,-0.9403856479430212,-0.21555563030788355},
	    {0.22880645570431787,-0.9116397471786565,-0.3414096911220644},
	    {-0.2205457575019867,0.9233434972981728,0.3143188744651746},
	    {-0.24440175036784864,0.8799135015614783,0.40745553645391874},
	    {0.1907853843683072,-0.8986030166037595,-0.39511207987362496},
	    {0.2942820241040201,-0.9314308044185322,-0.2140905109281748},
	    {-0.2705675472170894,0.8726303370268524,0.4065827065841965},
	    {0.29878751107804336,-0.8683272884656738,-0.3958961269444793},
	    {-0.3004796222278005,0.8954416657326242,0.3284756001529212},
	    {-0.26274284031602857,0.8681869181402136,0.420972297227341},
	    {0.22424249736170282,-0.9177867487118857,-0.3276931281944322},
	    {0.327862216297822,-0.8987334668112121,-0.29117781982455404},
	    {0.14829723548450957,-0.960937309346766,-0.23368230025624467},
	    {0.32229862093308215,-0.892018597011911,-0.31690128041637133},
	    {0.26822511677573146,-0.9101538094222373,-0.31571400020403795},
	    {0.262431476886375,-0.9098309185195078,-0.32146138126559587},
	    {-0.24117189311642412,0.9348670177107201,0.2604990924500586},
	    {0.30016818244158616,-0.873254532849626,-0.3838301487732512},
	    {0.16869694604902596,-0.9250444534822245,-0.34034408982014797},
	    {-0.20149508428000368,0.9249019125939637,0.3224223675414323},
	    {-0.3585029052377441,0.8930378964326864,0.27195400800719916},
	    {-0.21045740404750385,0.91075538782602,0.3552918583748609},
	    {0.39324150628902343,-0.8530184074281681,-0.3431045238994262},
	    {-0.26408330963323656,0.9162441892317573,0.30125834639424637},
	    {-0.12257089989683445,0.9431248055416667,0.3090177594742313},
	    {0.11894318838490257,-0.9240803403300157,-0.3632190008141042},
	    {-0.27868610310951214,0.897402474399698,0.34205680065587707},
	    {0.2133032648049601,-0.9419875961159767,-0.2591545600354902},
	    {0.16694802848343665,-0.9383606778338639,-0.30266746452280757},
	    {-0.32868220001548526,0.8436583288938274,0.424509876776802},
	    {-0.23337868329212863,0.9034992491518767,0.35947669878147603},
	    {0.16056400354823552,-0.8929571941500339,-0.4205313902436547},
	    {0.3233077922297389,-0.9205857636449749,-0.21907515435970967},
	    {0.1437099061164358,-0.9709904233724331,-0.19111530708718305},
	    {0.13837325615734603,-0.9411212500505853,-0.3084536183669069},
	    {0.12092662184206143,-0.9372946125520487,-0.3268876892921669},
	    {-0.2638842755145025,0.9306299281944206,0.25356069467690295},
	    {-0.15183143105192584,0.9046767428749609,0.3981296364827377},
	    {-0.2432728215979833,0.8684456351077294,0.43199596425671494},
	    {-0.24567292378225364,0.8902443369417137,0.38354899956001487},
	    {-0.24040407920346746,0.9142586779810427,0.32609346580189097},
	    {0.2364043288866958,-0.8943847501968536,-0.3797221509195156},
	    {-0.1905631478990058,0.9499343641800375,0.24760935041449755},
	    {0.17886099795166074,-0.9653619423270624,-0.1899606899288831},
	    {-0.1570666178023763,0.9471162817261004,0.27982284835489757},
	    {0.3128951382312449,-0.8572687748313151,-0.4088849228945305},
	    {0.2740329374406546,-0.8998969045228595,-0.3392513970904496},
	    {-0.12119285145488985,0.916762593796487,0.38060299443353146},
	    {-0.27182197235965316,0.8788297441527598,0.3921365784199472},
	    {-0.1879002109658413,0.9077816590940148,0.3750012935064502},
	    {0.2287503887638138,-0.8991925159857236,-0.3729960842095654},
	    {-0.2047373086943317,0.8871292297358827,0.41362345699539493},
	    {0.27570378211765667,-0.9008610524402569,-0.335315953575509},
	    {0.2531079819535797,-0.9018497653074646,-0.35014761213844947},
	    {-0.21651321220764966,0.9429591786852278,0.2528834045025611},
	    {0.1574798302282491,-0.869193496735156,-0.46872461883775085},
	    {0.29296813553157963,-0.9413897187897253,-0.167197694123309},
	    {0.18645890366500883,-0.9122798535998362,-0.36466223544522},
	    {0.18035061764699778,-0.9518021339936472,-0.24808537328807898},
	    {0.2732479916714017,-0.8871382188756505,-0.371915737308446},
	    {0.20428761253745367,-0.9103295712519185,-0.3599536679463705},
	    {-0.1772219031325033,0.9365670605858241,0.3023814446617441},
	    {0.28322887430997246,-0.9387063548523649,-0.19649881454322274},
	    {-0.2066068110350025,0.922862029493437,0.3250219994911142},
	    {-0.13024695117863364,0.9291923987129526,0.34588613427360826},
	    {-0.25623861913417817,0.8542898663722922,0.45225058792424067},
	    {-0.2647062723833368,0.8852009971747524,0.38255690290693156},
	    {0.27624877397895115,-0.8795579205748331,-0.3873815680039544},
	    {0.20040603568725268,-0.9318536638540875,-0.3024668081324512},
	    {0.19357671145685007,-0.8924676717687957,-0.40746719086220545},
	    {-0.2745300701382031,0.9195620269826902,0.2811386119361755},
	    {0.14445887962388734,-0.9592729448996133,-0.24274894290487634},
	    {-0.16822259955264285,0.9054182464614094,0.3897678231646352},
	    {0.26599639953088616,-0.8570862337309788,-0.4411905522395645},
	    {-0.19757263062951091,0.948237374999403,0.2486180530057632},
	    {0.09083546242773531,-0.9521739546405678,-0.29174248725491053},
	    {0.30912682807606356,-0.898868960977814,-0.3106045639624391},
	    {-0.16457766840792754,0.9231544366207897,0.3474191664384154},
	    {-0.2661107054404557,0.9142360435762091,0.3055446760722617},
	    {0.1658683227679415,-0.9049891708838115,-0.3917681713528829},
	    {0.28660841190889846,-0.8973201380266029,-0.3356667813695266},
	    {-0.13649153156631283,0.9261404711471938,0.3516161109988229},
	    {0.2616069480803422,-0.9187233789303889,-0.2958194681267917},
	    {-0.31060222117151415,0.9019842211933491,0.29991786362527567},
	    {-0.33785953484688014,0.8727633627853171,0.3523280393223266},
	    {0.25227454658965826,-0.8918037563664362,-0.37555773627193023},
	    {0.22896829219844406,-0.9118102971693346,-0.34084527742613363},
	    {-0.22894767569273686,0.8852410920594217,0.40488414481717694},
	    {0.2582623105356771,-0.9248860443744443,-0.2790813212634753},
	    {-0.3234643611110718,0.9148887328055975,0.2415562329487156},
	    {0.13565373699087901,-0.8659282263272894,-0.48142119862972815},
	    {-0.3066013337474347,0.8463942614370212,0.43544503252508676},
	    {-0.22324743673811573,0.9428021604754163,0.24755740383343086},
	    {-0.20445094200204225,0.9470400099807421,0.24761872265673573},
	    {0.10250118623692425,-0.9505435098627483,-0.2931902840781575}};



    protected static final Vector3D[] samples;

    static { 

	samples = new Vector3D[testData.length];

	for (int i = 0; i < samples.length; i++) {
	    samples[i] = new Vector3D(testData[i][0], testData[i][1], testData[i][2]);
	}

    }

   


    /**
     * Test a simple example. This uses test data with a known solution. It verifies that the optimization
     * works OK and that the parameters are set properly.
     *
     */
    protected void checkOptimizedParams(double[] fittedParams) {

	/* Expected answers
	   
	   Parameter name  Real parameter          Fitted parameter
	   theta1  1.495358096124826       1.646234557464967
	   phi1    0.21288323519812863     3.3544758887879222
	   kappa1  44.41227075102041       44.41227069057851
	   theta2  1.2313127255148006      1.2313127255148004
	   phi2    1.8196058214346083      1.8196058214346083
	   kappa2  107.32578415518596      107.32578415518347
	   alpha   0.5     0.4999999999999972

	*/
	
	// this is the same axis but pointing in the opposite direction
	double theta1 = 1.646234557464967;
	double phi1 = 3.3544758887879222;

	double theta2 = 1.2313127255148006;
	double phi2 = 1.8196058214346083;

	double kappa1 = 44.41227075102041;
	double kappa2 = 107.32578415518347;

	Vector3D mu1 = Vector3D.vectorFromSPC(1.0, theta1, phi1); 
	Vector3D mu2 = Vector3D.vectorFromSPC(1.0, theta2, phi2); 


	Vector3D fittedMu1 = Vector3D.vectorFromSPC(1.0, fittedParams[0], fittedParams[1]);
	Vector3D fittedMu2 = Vector3D.vectorFromSPC(1.0, fittedParams[3], fittedParams[4]);

	// axes are more or less orthogonal
	assertEquals(0.0, mu1.dot(mu2), 0.01);
	
	if (Math.abs(fittedMu1.dot(mu1)) > Math.abs(fittedMu2.dot(mu1))) {
	    
	    
	    assertEquals(1.0, Math.abs(fittedMu1.dot(mu1)), 0.00001);
	    assertEquals(1.0, Math.abs(fittedMu2.dot(mu2)), 0.00001);

	    assertEquals(kappa1, fittedParams[2], 0.0001);

	    assertEquals(kappa2, fittedParams[5], 0.0001);	    
	    
	    assertEquals(alpha, fittedParams[6], 0.0001);	    
	    
	    
	}
	else {

	    assertEquals(1.0, Math.abs(fittedMu1.dot(mu2)), 0.00001);
	    assertEquals(1.0, Math.abs(fittedMu2.dot(mu1)), 0.00001);

	    assertEquals(kappa1, fittedParams[5], 0.00001);

	    assertEquals(kappa2, fittedParams[2], 0.00001);	    

	    assertEquals(alpha, fittedParams[6], 0.00001);	    
			
	}


    }


    public void testFitEstimatedParams() {

	try {
	    TwoFibreWatsonFitter fitter = new TwoFibreWatsonFitter(samples);
	    fitter.fitEstimatedParams(alpha, 8);
	    checkOptimizedParams(fitter.getParameters());
	}
	catch (MarquardtMinimiserException e) {
	    fail(e.toString());
	}

  }


}
