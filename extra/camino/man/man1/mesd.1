.\" $Id: mesd.1,v 1.6 2006/04/21 12:08:11 ucacmgh Exp $

.TH "mesd" 1
.SH NAME
mesd \- Maximum entropy spherical deconvolution.

.SH SYNOPSIS
.B mesd
[\fIoptions\fR]

.SH DESCRIPTION
mesd is a general program for maximum entropy spherical deconvolution. It also runs
PASMRI, which is a special case of spherical deconvolution.

The program sends its output to the standard output by default. The input data must be in
voxel order.

.SH EXAMPLES
Run MESD on every voxel of the data file SubjectA.Bfloat using the spike deconvolution
kernel (see Options, -filter).

cat SubjectA.Bfloat | mesd -filter SPIKE 1.0 -schemefile A.scheme > MESD_A.Bdouble

And using the PASMRI kernel with r = 1.4:

cat SubjectA.Bfloat | mesd -filter PAS 1.4 -schemefile A.scheme > PAS_A.Bdouble

The basic options are similar to modelfit. See modelfit(1) for examples of running
simulations, which can be run with mesd in a similar way.

The format of the output in each voxel is:

{ exitcode

  ln(A^star(0))
  lambda_0
  lambda_1
  :
  lambda_N }

The exitcode contains the results of three tests. The first test thresholds the maximum
relative error between the numerical integrals computed at convergence and those computed
using a larger test point set; if the error is greater than a threshold the exitcode is
increased from zero to one as a warning; if it is greater than a larger threshold the
exitcode is increased to two to suggest failure. The second test thresholds the predicted
error in numerical integrals computed using the test point set; if the predicted error is
greater than a threshold the exitcode is increased by 10. The third test thresholds the
RMS error between the measurements and their predictions from the fitted deconvolution;
if the errors are greater than a threshold, the exitcode is increased by 100. An exitcode
of 112 means that all three tests were failed and the result is likely to be unreliable.
If all is well the exitcode is zero. Results are often still reliable even if one or two
of the tests are failed.

Other possible exitcodes are:

5 - The optimization failed to converge

-1 - Background

-100 - Something wrong in the MRI data, e.g. negative or zero measurements, so that the
optimization could not run.


The standard MESD implementation is computationally demanding, particularly as the number
of measurements increases (computation is approximately O(N^2), where N is the number of
measurements). There are two ways to obtain significant computational speed-up:

i) Turn off error checks and use a small point set for computing numerical integrals in
the algorithm by adding the flag -fastmesd. Sakaie CDMRI 2008 shows that using the
smallest point set (-basepointset 0) with no error checks usually has only a minor effect
on the output of the algorithm, but provides a major reduction in computation time. You
can increase the point set size using -basepointset with an argument higher than 0, which
may produce better results in some voxels, but will increase computation time, which
approximately doubles every time the point set index increases by 1.

ii) Reduce the complexity of the maximum entropy encoding using -mepointset <X>. By
default <X> = N, the number of measurements, and is the number of parameters in the max.
ent. representation of the output function, ie the number of lambda parameters, as
described in Jansons and Alexander Inverse Problems 2003. However, we can represent the
function using less components and <X> here specifies the number of lambda parameters. To
obtain speed-up, set <X> < N; complexity become O(<X>^2) rather than O(N^2). Note that
<X> must be chosen so that the camino/PointSets directory contains a point set with that
number of elements. When -mepointset decreases, the numerical integration checks make
less and less of a difference and smaller point sets for numerical integration (see
-basepointset) become adequate. So when <X> is low -fastmesd is worth using to get even
more speed-up.

The choice of <X> is a parameter of the technique. Too low and you lose angular
resoloution; too high and you see no computational benefit and may even suffer from
overfitting. Empirically, we have found that <X>=16 often gives good results and good
speed up, but it is worth trying a few values a comparing performance. The reduced
encoding is described in the following ISMRM abstract: Sweet and Alexander "Reduced
Encoding Persistent Angular Structure" 572 ISMRM 2010.

.SH OPTIONS
mesd processes options in command line order.

Basic options for processing a data file:

.TP
.B -filter\fR <\f Filter name\fR> <\f Filter parameters\fR>
The inversion index specifies the type of inversion to perform on the data. The currently
available choices are:

Filter name		Filter parameters

SPIKE			bd (Product of the b-value and the			
diffusivity along the fibre.)

PAS				r

.TP
.B \-fastmesd\fR
Turns off numerical integration checks and fixes the integration point set size at that
of the index specified by -basepointset.

.TP
.B \-basepointset\fR <\fIindex\fR>
Specifies the index of the smallest point set to use for numerical integration. If
-fastmesd is specified, this is the only point set used; otherwise, this is the first
point set tested and the algorithm automatically determines whether to increase the point
set size individually in each voxel.

.TP
.B \-inputfile\fR <\fIinput filename\fR>
See modelfit(1).

.TP
.B \-inputdatatype\fR <\fIdata type of input\fR>
See modelfit(1).

.TP
.B \-outputfile\fR <\fIoutput filename\fR>
See modelfit(1).

.TP
.B \-bgthresh\fR <\fIBACKGROUNDTHRESHOLD\fR>
See modelfit(1).

.TP
.B \-csfthresh\fR <\fICSFTHRESHOLD\fR>
See modelfit(1).

.TP
.B \-schemefile\fR <\fIScheme file name\fR>
See modelfit(1).

.TP
.B \-bmx\fR <\fIacquisition scheme index\fR>
See modelfit(1).

.TP
.B \-fixedmodq\fR <\fIM\fR> <\fIN\fR> <\fIQ\fR> <\fItau\fR>
See modelfit(1).

.TP
.B \-tau\fR <\fItau\fR>
See modelfit(1).

.TP
.B \-testfunc\fR <\fItest function index\fR>
See datasynth(1).

.TP
.B \-lambda1\fR <\fIl_1\fR>
See datasynth(1).

.TP
.B \-scale\fR <\fIscale factor\fR>
See datasynth(1).

.TP
.B \-dt2rotangle\fR <\fIrotation angle (in radians)\fR>
See datasynth(1).

.TP
.B \-dt2mix\fR <\fImixing parameter\fR>
See datasynth(1).

.TP
.B \-gaussmix\fR <\fIn\fR> <\fID_1\fR> <\fIa_1\fR> ... 
         <\fID_n\fR> <\fIa_n\fR> 
See datasynth(1).

.TP
.B \-rotation\fR <\fIrotation index\fR>
See datasynth(1).

.TP
.B \-voxels\fR <\fIT\fR>
See datasynth(1).

.TP
.B \-snr\fR <\fIS\fR>
See datasynth(1).

.TP
.B \-seed\fR <\fIseed\fR>
See datasynth(1).

.TP
.B \-bootstrap\fR <\fIR\fR>
See datasynth(1).

.TP
.B \-inputmodel\fR <\fImodel type\fR>
See datasynth(1).

.TP
.B \-mepointset\fR <\fInumber\fR>
Use a set of directions other than those in the scheme file for the deconvolution kernel.
 The number refers to the number of directions on the unit sphere. For example,
"-mepointset 54" uses the directions in "camino/PointSets/Elec054.txt".

.SH "AUTHORS"
Daniel Alexander <camino@cs.ucl.ac.uk>

.SH "SEE ALSO"
modelfit(1), dtfit(1), twotenfit(1), threetenfit(1), datasynth(1)

.SH BUGS

    