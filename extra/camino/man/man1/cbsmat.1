.TH cbsmat 1

.SH NAME
cbsmat \- Compute connectivity based segmentation

.SH SYNOPSIS
.B cbsmat -seedfile\fR <\fIfile\fR> \fB\-targetfile\fR <\fIfile\fR> \fB\-outputroot\fR \fI<root>\fR  [\fIoptions\fR]

.SH DESCRIPTION

Computes a connectivity based segmentation of a seed region. A connectivity vector is
output for each seed point detailing streamline counts to each target. Additionally, two
images are produced, one containing the target region with the largest streamline count
to each seed, and one containing the respective value.

Input tracts should be in the same physical space as the seed and target images.

Three files will be produced as output, with extensions

  sc.csv - The connectivity matrix. Each row in this matrix corresponds to the connectivity from one seed point. The first five columns describe the seed point X,Y,Z coordinates in physical space, the label of the seed ROI at that point, and the total number of input streamlines for this seed point. The remaining columns list the number of streamline that connect from the seed point to each of the target regions.

  cbs_labels.nii.gz - The connectivity segmentation. Each seed point is labeled with the target region with the largest streamline count. 

  cbs_sc.nii.gz - The streamline counts corresponding to the target region with the largest streamline count.

If there are multiple seed points per voxel, earlier seeds will be overwritten in the
output images by later ones, though both will exist in the matrix. In the event of two or
more targets having the same streamline count for a given seed, the first one (lowest
label index) is chosen.

 

.SH COMPARISON TO PROCSTREAMLINES 

The output of \fBcbsmat\fR has some similarity to that produced by \fBprocstreamlines\fR
and \fBtargetprobs2txt\fR. There are some important differences between the output you
would get from the two routes. The main difference is in normalization and the handling
of seed points in voxels containing multiple principal directions (PDs). \fBcbsmat\fR

 - Takes all streamlines from a seed point and processes them together. 

 - Does not perform any normalization of streamline counts, however the total number of streamlines input for each seed point is recorded, which can be used for normalization similar to that of \fBprocstreamlines\fR

 - Outputs seed locations in physical space

 - Allows the user to label the target regions, or does so automatically

 - Outputs the seed ROI label, which facilitates clustering voxelwise connectivity stats over larger regions.

The main benefit to treating all streamlines from a single seed point as one unit is that
the user is free to pre-process the tracts with one or more runs of
\fBprocstreamlines\fR. There is no requirement to perform all pre-processing in one pass,
as there is when producing a connectivity segmentation with \fBprocstreamlines\fR.

The cost of not treating each principal direction separately is that it may complicate
interpretation of the results, especially in cases where the connectivity of streamlines
seeded along two or more principal directions overlap. This may be resolved in a future
release by incorporating the principal direction index into the streamlines and thus into
the matrix.

.SH EXAMPLES

  cat tracts.Bdouble | cbsmat -seedfile seeds.nii.gz -targetfile targets.nii.gz -outputroot cbsmat_

.SH OPTIONS

.TP
.B \-seedfile\fR <\ffile\fR> 
An image containing seeds, as used in \fBtrack\fR. Point set seeds are not yet supported.

.TP
.B \-targetfile\fR <\ffile\fR> 
An image containing targets, as used in \fBprocstreamlines\fR.

.TP
.B \-outputroot\fR <\fIfile\fR>
File root for the output. The extension will be determined from the input.

.TP
.B \-targetnamefile\fR <\fIfile\fR>
Optional names of targets. This file should contain one entry per line, with the target
intensity followed by the name, separated by white space. For example:

  1	some_brain_region
  2     some_other_region

These names will be used in the output. The names themselves should not contain spaces or
commas. The labels may be in any order but the output matrices will be ordered by label
intensity.

.SH "AUTHORS"
Philip Cook <camino@cs.ucl.ac.uk>

.SH "SEE ALSO"
procstreamlines(1), conmat(1)

.SH BUGS
